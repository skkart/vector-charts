{"version":3,"sources":["webpack://vc/./d3Importer.js","webpack://vc/./charts/Chart.js","webpack://vc/./axis/index.js","webpack://vc/./helpers.js","webpack://vc/./series/Series.js","webpack://vc/../node_modules/lodash/isLength.js","webpack://vc/../node_modules/lodash/isArrayLike.js","webpack://vc/../node_modules/lodash/each.js","webpack://vc/../node_modules/lodash/forEach.js","webpack://vc/../node_modules/lodash/_arrayEach.js","webpack://vc/../node_modules/lodash/_baseEach.js","webpack://vc/../node_modules/lodash/_baseForOwn.js","webpack://vc/../node_modules/lodash/_baseFor.js","webpack://vc/../node_modules/lodash/_createBaseFor.js","webpack://vc/../node_modules/lodash/keys.js","webpack://vc/../node_modules/lodash/_arrayLikeKeys.js","webpack://vc/../node_modules/lodash/_baseTimes.js","webpack://vc/../node_modules/lodash/isArguments.js","webpack://vc/../node_modules/lodash/_baseIsArguments.js","webpack://vc/../node_modules/lodash/isBuffer.js","webpack://vc/../node_modules/lodash/stubFalse.js","webpack://vc/../node_modules/lodash/_isIndex.js","webpack://vc/../node_modules/lodash/isTypedArray.js","webpack://vc/../node_modules/lodash/_baseIsTypedArray.js","webpack://vc/../node_modules/lodash/_baseUnary.js","webpack://vc/../node_modules/lodash/_nodeUtil.js","webpack://vc/../node_modules/lodash/_baseKeys.js","webpack://vc/../node_modules/lodash/_isPrototype.js","webpack://vc/../node_modules/lodash/_nativeKeys.js","webpack://vc/../node_modules/lodash/_overArg.js","webpack://vc/../node_modules/lodash/isFunction.js","webpack://vc/../node_modules/lodash/isObject.js","webpack://vc/../node_modules/lodash/_createBaseEach.js","webpack://vc/../node_modules/lodash/_castFunction.js","webpack://vc/../node_modules/lodash/identity.js","webpack://vc/../node_modules/babel-runtime/core-js/object/keys.js","webpack://vc/../node_modules/core-js/library/fn/object/keys.js","webpack://vc/../node_modules/core-js/library/modules/es6.object.keys.js","webpack://vc/./data-parser/BasicTSParser.js","webpack://vc/./tooltip/TimeSeriesTooltip.js","webpack://vc/./mouse-handler/index.js","webpack://vc/./zoom/index.js","webpack://vc/./legend/TimeSeriesLegend.js","webpack://vc/./series/Line.js","webpack://vc/./series/StackArea.js","webpack://vc/./series/TimeSeries.js","webpack://vc/./charts/TimeSeriesChart.js"],"names":["Chart","container","opts","isString","isObject","length","dataParser","$container","$","Error","containerName","takeContainerWidth","chart","width","takeContainerHeight","height","maxWidth","minWidth","options","chartHeight","chartWidth","margin","chartType","left","right","top","bottom","chartFullSpace","chartComponentsArr","svg","select","get","size","append","node","empty","attr","className","uniqueId","graphZone","console","log","this","forEach","chartCmpt","ChartComponent","draw","update","showFlag","showHide","remove","chartResize","throttedResize","throttle","Math","floor","setTimeout","chartId","id","window","on","autoSizeChart","resizedGraphWidth","destroyFull","off","Axis","position","orient","label","unit","rangeScale","domainScale","scaleType","axisClamp","tickNumber","rotateText","textLimit","tickFormatter","showGridLines","tickPadding","constants","TICK_PADDING","scalePadding","SCALE_PADDING","visible","axis","scale","scaleBand","scaleLinear","UNITS_TIME","scaleTime","DIR_BOTTOM","axisBottom","DIR_TOP","axisTop","tickSizeInner","tickValues","DIR_LEFT","axisLeft","DIR_RIGHT","axisRight","isFunction","externalFormatter","val","self","unshift","transformAttr","axisTag","tickFormat","axisLabelTag","text","classed","xTrans","yTrans","rotate","X_AXIS_LABEL_Y","BRUSHY_BUFFER","padding","clamp","range","domain","isNumber","tickVal","newTick","dayLength","minuteLength","ticks","call","limitText","tickFmt","emptyFn","selectAll","style","d","i","truncateText","addDefaultChartOptions","isTouchScreen","tooltip","format","legend","legendPrefix","afterDraw","c","onComplete","time","onError","error","defaultValueFormat","decimals","kVal","getValueWithDecimals","addDefaultTSOptions","xAxis","timeInfo","timeLen","timeRange","xAxisFn","TIME_FORMAT_BUFFER","timeFormat","xDate","yAxis","UNITS_DEF","min","zoom","formatTime","isArray","plotSet","zoneOffset","tableStr","dataIndex","key","isNaN","plotAxis","color","name","addDefaultBSOptions","dataArr","Series","plotSeries","plotFn","redraw","MAX_SAFE_INTEGER","module","exports","value","isLength","arrayEach","baseEach","castFunction","collection","iteratee","array","index","baseForOwn","createBaseEach","baseFor","keys","object","createBaseFor","fromRight","keysFunc","iterable","Object","props","arrayLikeKeys","baseKeys","isArrayLike","baseTimes","isArguments","isBuffer","isIndex","isTypedArray","hasOwnProperty","prototype","inherited","isArr","isArg","isBuff","isType","skipIndexes","result","String","push","n","Array","baseIsArguments","isObjectLike","objectProto","propertyIsEnumerable","arguments","baseGetTag","argsTag","stubFalse","freeExports","nodeType","freeModule","Buffer","root","undefined","reIsUint","type","test","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","typedArrayTags","func","freeProcess","freeGlobal","process","types","require","binding","e","isPrototype","nativeKeys","Ctor","constructor","overArg","transform","arg","asyncTag","funcTag","genTag","proxyTag","tag","eachFunc","identity","__esModule","toObject","$keys","it","BasicTSParser","dataOptions","data","series","constructChartData","constructXAxisInfo","constructPlotInfo","constructYAxisInfo","err","seriesData","timeseries","columns","values","validJSONType","firstTime","isDate","start","getDateFromEpoc","chartData","eachPlotSet","plotInfo","getObject","yAxis2","findEachPlotRange","yRange","yRange2","max","minVal","maxVal","stack","each","eachPlot","Infinity","plotData","valueRange","valData","memberArr","stackOrderMembers","sum","member","allMax","allMax2","allMin","allMin2","yMin","yMax","reduce","a","b","ind","timeStampIndex","dataColorArr","yLeft","yRight","refineName","refineString","isBoolean","barOrderMembers","ChartAxisParser","TimeSeriesTooltip","crossHairs","enable","$toolTipDiv","addClass","TOOLTIP_TOP_BUFFER","mouseHandler","register","xScale","dateIndex","dataSet","bisectDate","bisector","eventName","mouseBrush","xMouse","d3Mouse","yMouse","xVal","invert","found","dBefore","dPrev","dFound","toolTipData","dataParseLen","visibleDataIndex","plot","multiArrMap","dSet","filter","sort","maxInd","arrSet","dateIntRange","abs","hover","hide","find","xPos","yPos","displayData","percentageDiff","css","round","display","html","show","MouseHandler","registerFn","callback","fun","Zoom","onZoom","onY1Zoom","onY2Zoom","yScaleLeft","yScaleRight","$brushOverlay","brushX","extent","brushXDiv","d3Event","selection","d0","map","d1","move","cursor","modifyAxisProps","brushYLeft","brushY","brushYLeftDiv","brushYRight","brushYRightDiv","TimeSeriesLegend","disableSeriesToggle","maxWidthLegend","spacingNames","eachPlotNames","leng","textWidth","maxLenLegend","dummyG","enter","thisWidth","getComputedTextLength","ele","maxTextLength","graphOptions","toggleSeries","maxYLen","fullYLen","LEGEND_Y_SPACE","divWidth","LEGEND_SHOW_WIDTH","legendDiv","seriesName","visibleSeries","plotName","applyYAxis","currentPlotInfo","reScaleYAxis","sFlag","onLegendChange","legendDisplay","legendBlock","LEGEND_SPACE","trailing","LEGEND_TEXT_X","LEGEND_TEXT_Y","legName","isPieLegend","substring","LEGEND_RECT_SIZE","horizontalLegendWidth","getBBox","$legendText","basicWidth","legendPos","VERT_POS_LEGEND","LEGEND_MAX_WIDTH","legendXPos","xBuff","legendYPos","d3Svg","DATA_INTERVAL_BUFFER_X","LEGEND_RIGHT_BUFFER","Line","lineData","yAxisTarget","xAxisTarget","x","indexOf","y","line","defined","lineTag","clipElement","lineWidth","StackArea","stackData","stackOrderIndex","d3Stack","area","y0","y1","order","stackOrderNone","offset","stackOffsetNone","stackVisibleOrder","stackLayer","stackMember","TimeSeries","TimeSeriesChart","startTime","Date","dataExecutor","chartInitilize","axisOptions","tooltipOpts","Tooltip","zoomOpts","zoomBrush","onXZoom","legends","chartResponsive","triggerMouseAction","timeDiff","getTime","axisSpecifier","tickValArr","diffVal","rangeVal","applyY1Axis","applyY2Axis","reScaleAxis","requiredWidth","class","maxText","ticksArr","tickHtml","Y_AXIS_SPACE"],"mappings":"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","file":"timeseries.min.js","sourcesContent":["export {\n  scaleBand,\n  scaleLinear,\n  scaleTime\n} from 'd3-scale'\n\nexport {\n  axisBottom,\n  axisTop,\n  axisLeft,\n  axisRight\n} from 'd3-axis'\n\nexport {timeFormat} from 'd3-time-format'\n\nexport {\n  select,\n  mouse as d3Mouse,\n  event as d3Event\n} from 'd3-selection'\n\nexport {\n  range,\n  max,\n  transpose,\n  bisector\n} from 'd3-array'\n\nexport {brushX, brushY} from 'd3-brush'\n\nexport {\n  line, stack, area,\n  stackOrderNone, stackOffsetNone\n} from 'd3-shape'\n\nexport default {\n  version: 'v5'\n}\n","import {isObject, isString, throttle} from '@/utils'\nimport uniqueId from 'lodash/uniqueId'\nimport {select} from '@/d3Importer'\nimport ChartComponent from '@/charts/ChartComponent'\n\nexport default class Chart extends ChartComponent {\n  constructor (container, opts) {\n    super()\n    if (isString(container) && isObject(opts) && container.length && isObject(opts.dataParser)) {\n      this.$container = $(container)\n      if (!this.$container.length) {\n        throw new Error('The graph container spectifed in options doesnt exist inside in Document Body')\n      }\n      opts.containerName = container\n      let takeContainerWidth = false\n      if (!Number.isFinite(opts.chart.width)) {\n        opts.chart.width = this.$container.width()\n        takeContainerWidth = true\n      }\n\n      let takeContainerHeight = false\n      if (!Number.isFinite(opts.chart.height)) {\n        opts.chart.height = this.$container.height()\n        takeContainerHeight = true\n      }\n\n      if (opts.chart.width > opts.chart.maxWidth) {\n        opts.chart.width = opts.chart.maxWidth\n      }\n\n      if (opts.chart.width < opts.chart.minWidth) {\n        opts.chart.width = opts.chart.minWidth\n      }\n\n      this.options = opts\n\n      this.chartHeight = opts.chart.height\n      this.chartWidth = opts.chart.width\n      this.margin = opts.chart.margin\n      this.chartType = opts.chart.chartType\n\n      if (takeContainerWidth) {\n        this.chartWidth = this.chartWidth - (this.margin.left + this.margin.right)\n      }\n\n      if (takeContainerHeight) {\n        this.chartHeight = this.chartHeight - (this.margin.top + this.margin.bottom)\n      }\n\n      // Attach dataProcess to chart, which generate chartData and plot Info based on JSON and options\n      this.dataParser = opts.dataParser\n\n      // Delete dataProcess from options\n      delete this.options.dataParser\n\n      this.chartFullSpace = {\n        width: this.chartWidth + this.margin.left + this.margin.right,\n        height: this.chartHeight + this.margin.top + this.margin.bottom,\n      }\n\n\n      // Array which holds all the chartComponents required for the graph like axis, series, tooltip, legend etc\n      this.chartComponentsArr = []\n\n      this.svg = select(this.$container.get(0)).select('svg')\n\n      if (this.svg.size() === 0) {\n        // Create svg element if not exist inside chart container DIV\n        this.svg = select(this.$container.get(0)).select('.vc-div-svg').append('svg')\n      }\n\n      // Clear svg if it has needless content\n      $(this.svg.node()).empty()\n\n      this.svg\n        .attr('width', this.chartFullSpace.width)\n        .attr('height', this.chartFullSpace.height)\n        .attr('class', 'vc-svg ' + opts.chart.className)\n\n      // Add defs to show plot series within the def specified width and height\n      this.svg.append('defs')\n        .append('clipPath')\n        .attr('id', uniqueId('chart_clip'))\n        .append('rect')\n        .attr('width', this.chartWidth)\n        .attr('height', this.chartHeight)\n\n      // Add graphZone tag, so that all series and axis are grouped together\n      this.graphZone = this.svg.append('g')\n        .attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')')\n        .attr('class', 'vc-graphZone')\n    }\n  }\n\n  draw () {\n    console.log('Chart draw', this)\n    // Draw all the chartComponents in the same order of there initilization using chartComponentsArr\n    this.chartComponentsArr.forEach(function (chartCmpt) {\n      if (chartCmpt instanceof ChartComponent) {\n        chartCmpt.draw()\n      }\n    })\n  }\n\n  update () {\n    this.svg.attr('width', this.chartFullSpace.width)\n    this.graphZone.attr('transform', 'translate(' + this.margin.left + ',' + this.margin.top + ')')\n    this.svg.select('clipPath').select('rect').attr('width', this.chartWidth)\n\n    console.log('Chart update', this)\n    // Update all chart component based on new width changes\n    this.chartComponentsArr.forEach(function (chartCmpt) {\n      if (chartCmpt instanceof ChartComponent) {\n        chartCmpt.update()\n      }\n    })\n  }\n\n  showHide (showFlag) {\n    console.log('Chart showHide', this)\n    showFlag = !!showFlag // Convert any type to boolean\n    this.chartComponentsArr.forEach(function (chartCmpt) {\n      if (chartCmpt instanceof ChartComponent) {\n        chartCmpt.showHide(showFlag)\n      }\n    })\n  }\n\n  remove () {\n    console.log('ac.chart remove', this)\n    this.chartComponentsArr.forEach(function (chartCmpt) {\n      if (chartCmpt instanceof ChartComponent) {\n        chartCmpt.remove()\n      }\n    })\n  }\n\n  // chartResponsive based on screen resize is handled\n  chartResponsive () {\n    if (this.options.chart.chartResize) {\n      this.throttedResize = throttle((width, height) => {\n        if (width === this.chartFullSpace.width) {\n          return // Dont resize if graph is already adjusted\n        }\n        this.chartFullSpace.width = Math.floor(width)\n        this.chartFullSpace.height = Math.floor(height)\n        this.chartWidth = this.chartFullSpace.width - (this.margin.left + this.margin.right)\n        this.chartHeight = this.chartFullSpace.height - (this.margin.top + this.margin.bottom)\n        setTimeout(() => this.update(), 0)\n      }, 450) // 'this' Will have reference of timeSeriesChart or pieSeriesChart\n\n      // Add resize for each chart based on chart ID namespace\n      const chartId = 'ac_' + this.options.chart.id\n      $(window).on('resize.' + chartId, () => this.autoSizeChart())\n\n    }\n  }\n\n  autoSizeChart () {\n    let resizedGraphWidth = this.$container.width()\n\n    if (resizedGraphWidth > this.options.chart.maxWidth) {\n      resizedGraphWidth = this.options.chart.maxWidth\n    }\n\n    if (resizedGraphWidth < this.options.chart.minWidth) {\n      resizedGraphWidth = this.options.chart.minWidth\n    }\n\n    this.throttedResize(resizedGraphWidth, this.$container.height())\n  }\n\n  // Destroy all chart properties and components\n  destroy (destroyFull) {\n    destroyFull = !!destroyFull\n    // Remove resize hander on window for vcChart namespace\n    if (this.options.chart.chartResize) {\n      const chartId = 'ac_' + this.options.chart.id\n      $(window).off('resize.' + chartId)\n    }\n\n    // Remove all chartComponents (timeSeriesChart or pieSeriesChart)\n    this.remove()\n\n    // Remove svg and container if destroyFull is true\n    destroyFull && this.svg.remove()\n    destroyFull && this.$container.remove()\n\n    return null\n  }\n}\n","import ChartComponent from '@/charts/ChartComponent'\nimport {\n  axisBottom, axisTop, axisLeft, axisRight,\n  scaleBand, scaleLinear, scaleTime\n} from '@/d3Importer'\nimport constants from '@/constants'\nimport {emptyFn, isFunction, isNumber, truncateText} from '@/utils'\n\nexport default class Axis extends ChartComponent {\n  constructor (opts) {\n    super()\n    this.opts = Object.assign({\n      className: '',\n      position: 'y',\n      orient: 'left',\n      label: '',\n      unit: '',\n      rangeScale: [0, 1000],\n      domainScale: [0, 100],\n      scaleType: '',\n      axisClamp: true,\n      tickNumber: null,\n      rotateText: false,\n      textLimit: 8,\n      tickFormatter: false, // Use d3 tickFormatter\n      showGridLines: false,\n      tickPadding: constants.TICK_PADDING,\n      scalePadding: constants.SCALE_PADDING,\n      visible: true\n    }, opts)\n\n    this.axis = null\n    // Create Axis and Scale based on input options\n    if (this.opts.scaleType === 'scaleBand') {\n      this.scale = scaleBand()\n    } else {\n      this.scale = scaleLinear()\n      if (this.opts.unit === constants.UNITS_TIME) {\n        this.scale = scaleTime()\n      }\n    }\n\n    if (this.opts.position === 'x') {\n      if (this.opts.orient === constants.DIR_BOTTOM) {\n        this.axis = axisBottom()\n      } else if (this.opts.orient === constants.DIR_TOP) {\n        this.axis = axisTop()\n      }\n      if (this.opts.showGridLines === true) {\n        this.axis.tickSizeInner(-(this.opts.chart.chartHeight))\n      }\n\n    }\n\n    // Holds all tick values that axis shows\n    this.tickValues = []\n\n    if (this.opts.position === 'y') {\n      if (this.opts.orient === constants.DIR_LEFT) {\n        this.axis = axisLeft()\n      } else if (this.opts.orient === constants.DIR_RIGHT) {\n        this.axis = axisRight()\n        this.axis.tickSizeInner(0)\n      }\n      if (this.opts.showGridLines === true) {\n        this.axis.tickSizeInner(-(this.opts.chart.chartWidth))\n      }\n\n      if (isFunction(this.opts.tickFormatter)) {\n        // If external formatter is provided, modify formatter to populate tickValues\n        const externalFormatter = this.opts.tickFormatter\n        this.opts.tickFormatter = function (val) {\n          self.tickValues.unshift(val)\n          return externalFormatter(val)\n        }\n      }\n    }\n\n    if (this.opts.tickPadding > 0) {\n      this.axis.tickPadding(this.opts.tickPadding)\n    }\n  }\n\n  modifyAxisProps (opts = {}) {\n    Object.assign(this.opts, opts)\n    this.update()\n  }\n\n  draw () {\n    this.transformAttr = null\n\n    if (this.opts.orient === constants.DIR_BOTTOM) {\n      this.transformAttr = `translate(0,${this.opts.chart.chartHeight})`\n    } else if (this.opts.orient === constants.DIR_RIGHT) {\n      this.transformAttr = `translate(${this.opts.chart.chartWidth},0)`\n    }\n\n    this.axisTag = this.opts.chart.graphZone.append('g')\n      .attr('class', `vc-axis vc-axis-${this.opts.orient} vc-axis-${this.opts.className}`)\n\n\n    // If no formatter is provided, axis uses d3 default formatter\n    isFunction(this.opts.tickFormatter) && this.axis.tickFormat(this.opts.tickFormatter)\n\n    // Add Label to Axis\n    if (this.opts.label) {\n      this.opts.axisLabelTag = this.axisTag.append('text')\n        .attr('class', 'vc-axis-label')\n        .text(this.opts.label)\n    }\n\n    this.update()\n\n    // IF not visible, Dont show the axis, but still scale and plot on graphZone, so that all series can be plotted\n    !this.opts.visible && this.axisTag.classed('vc-hidden', true)\n  }\n\n  // Updates graph Axis based on new width and modify range, domain and ticks\n  update () {\n    if (this.opts.orient === constants.DIR_BOTTOM) {\n      this.opts.rangeScale = [0, this.opts.chart.chartWidth]\n    }\n\n    if (this.opts.orient === constants.DIR_RIGHT) {\n      this.transformAttr = `translate(${this.opts.chart.chartWidth},0)`\n    }\n\n\n    // Position label, scale, ticks, axis based on chart width\n    if (this.opts.label) {\n      let xTrans = 0\n      let yTrans = 0\n      let rotate = 0\n      if (this.opts.orient === constants.DIR_BOTTOM) {\n        xTrans = Math.floor(this.opts.chart.chartWidth / 2)\n        yTrans = constants.X_AXIS_LABEL_Y\n      } else if (this.opts.orient === constants.DIR_LEFT || this.opts.orient === constants.DIR_RIGHT) {\n        if (this.opts.orient === constants.DIR_LEFT) {\n          xTrans = -(this.opts.chart.margin.left) + constants.BRUSHY_BUFFER\n          rotate = 270\n        } else {\n          xTrans = this.opts.chart.margin.right - constants.BRUSHY_BUFFER\n          rotate = 90\n        }\n        yTrans = Math.floor(this.opts.chart.chartHeight / 2)\n      }\n      this.opts.axisLabelTag\n        .attr('transform',\n          `translate(${xTrans},${yTrans}) rotate(${rotate})`)\n    }\n\n    this.tickValues = []\n\n    let domainScale = [this.opts.domainScale[0], this.opts.domainScale[this.opts.domainScale.length - 1]]\n    if (this.opts.scaleType === 'scaleBand') {\n      domainScale = this.opts.domainScale\n      this.scale\n        .padding(this.opts.scalePadding)\n    } else {\n      this.opts.axisClamp && this.scale.clamp() // Clamps outside range value within spectifed range and domain\n    }\n\n    this.scale.range(this.opts.rangeScale)\n      .domain(domainScale)\n\n    this.axis.scale(this.scale)\n\n    if (isNumber(this.opts.tickNumber)) {\n      let tickVal = this.opts.tickNumber\n      if (this.opts.position === 'x' && this.opts.unit === constants.UNITS_TIME) {\n        // modify xtick to display less ticks on lower chart width or has less days\n        const newTick = Math.floor(this.opts.chart.chartWidth / 60)\n        const dayLength = Math.floor((this.opts.domainScale[1] - this.opts.domainScale[0]) / (60 * 60 * 24 * 1000)) + 1\n        if (dayLength > 2 && dayLength < tickVal) {\n          tickVal = dayLength\n        }\n\n        const minuteLength = Math.floor((this.opts.domainScale[1] - this.opts.domainScale[0]) / (60 * 1000))\n        if (minuteLength < tickVal) {\n          tickVal = minuteLength\n        }\n\n        if (newTick < tickVal) {\n          tickVal = newTick\n        }\n      }\n\n      this.axis.ticks(tickVal)\n    } else if (isFunction(this.opts.tickNumber)) {\n      this.axis.ticks(this.opts.tickNumber())\n    }\n\n    this.transformAttr && this.axisTag.attr('transform', this.transformAttr)\n\n    if (this.opts.showGridLines && this.opts.position === 'y') {\n      this.axis.tickSizeInner(-(this.opts.chart.chartWidth))\n    }\n\n    this.axisTag.call(this.axis)\n\n\n    const limitText = this.opts.textLimit\n    const tickFmt = isFunction(this.opts.tickFormatter) ? this.opts.tickFormatter : emptyFn\n\n    if (this.opts.rotateText === 'slant') {\n      this.axisTag\n        .selectAll('text')\n        .style('text-anchor', 'end')\n        .attr('y', '8')\n        .attr('dx', '-1.0em')\n        .attr('dy', '.15em')\n        .attr('transform', 'rotate(-65)')\n        .text(function (d, i) {\n          return truncateText(tickFmt(d), limitText)\n        })\n    } else if (this.opts.rotateText === 'vertical') {\n      this.axisTag\n        .selectAll('text')\n        .attr('y', 0)\n        .attr('x', 9)\n        .attr('dy', '.35em')\n        .attr('transform', 'rotate(90)')\n        .style('text-anchor', 'start')\n        .text(function (d, i) {\n          return truncateText(tickFmt(d), limitText)\n        })\n    }\n  }\n\n  showHide (showFlag) {\n    showFlag = !!showFlag\n    this.axisTag && this.axisTag.classed('vc-hidden', !showFlag)\n    this.opts.axisLabelTag && this.opts.axisLabelTag.classed('vc-hidden', !showFlag)\n    this.opts.visible = showFlag\n  }\n\n  // Remove Axis Instance\n  remove () {\n    this.opts.axisLabelTag && this.opts.axisLabelTag.remove()\n    this.axisTag && this.axisTag.remove()\n    this.scale = null\n    this.axis = null\n    this.opts = null\n  }\n}\n","import constants from '@/constants'\nimport {getValueWithDecimals, isArray, isFunction} from '@/utils'\nimport {timeFormat} from '@/d3Importer'\n\nexport function addDefaultChartOptions (opts) {\n\n  opts.chart = Object.assign({\n    chartResize: false,\n    isTouchScreen: false,\n    className: '',\n    maxWidth: Number.MAX_SAFE_INTEGER,\n    minWidth: 0\n  }, opts.chart)\n\n  opts.tooltip = Object.assign({\n    visible: true,\n    format: false // Use aryakaCharts internal tooltip formatter to show raw data\n  }, (opts.tooltip || {}))\n\n  opts.legend = Object.assign({\n    visible: true,\n    legendPrefix: '',\n    position: constants.DIR_TOP\n  }, (opts.legend || {}))\n\n  if (!isFunction(opts.afterDraw)) {\n    opts.afterDraw = function (c) {\n      return c\n    }\n  }\n\n  if (!isFunction(opts.onComplete)) {\n    opts.onComplete = function (time) {\n      console.log(`Chart loading of ${opts.containerName} is completed in ${time} ms`)\n    }\n  }\n\n  if (!isFunction(opts.onError)) {\n    opts.onError = function (error) {\n      console.log(`Chart has encountered error of ${opts.containerName} `, error)\n    }\n  }\n\n  return opts\n}\n\nexport function defaultValueFormat (val, unit = '', decimals = 3) {\n  const denominator = 1000\n  if (val > denominator) {\n    const kVal = getValueWithDecimals(val / denominator, decimals)\n    if (kVal > denominator) {\n      const mVal = getValueWithDecimals(kVal / denominator, decimals)\n      return `${mVal}M ${unit}`\n    }\n    return `${kVal}K ${unit}`\n  }\n  return `${getValueWithDecimals(val, decimals)} ${unit}`\n}\n\n\nexport function addDefaultTSOptions (opts) {\n  // Add defaults to xAxis\n  opts.xAxis = Object.assign({\n    bottom: {\n      unit: constants.UNITS_TIME,\n      visible: true\n    }\n  }, (opts.xAxis || {}))\n\n  if (!isFunction(opts.xAxis.bottom.tickFormatter)) {\n    const timeInfo = opts.timeInfo\n    // If the date range is less than 2 days, Show in hour format\n    const timeLen = timeInfo.timeRange.length\n    const dateDiff = timeInfo.timeRange[timeLen - 1] - timeInfo.timeRange[0]\n\n    const xAxisFn = (dateDiff < constants.TIME_FORMAT_BUFFER) ? timeFormat('%H:%M') : timeFormat('%d %b %Y')\n    opts.xAxis.bottom.tickFormatter = (xDate) => {\n      return xAxisFn(xDate)\n    }\n  }\n\n  // If yAxis is not specified, then default is left and its value axis with unit\n  if (!opts.yAxis) {\n    opts.yAxis = {\n      left: {}\n    }\n  }\n\n  if (opts.yAxis.left) {\n    opts.yAxis.left = Object.assign({\n      unit: constants.UNITS_DEF,\n      min: 0, // Start plotting Y Axis from 0\n      visible: true\n    }, opts.yAxis.left)\n  }\n\n  if (opts.yAxis.right) {\n    opts.yAxis.right = Object.assign({\n      unit: constants.UNITS_DEF,\n      min: 0, // Start plotting Y Axis from 0\n      visible: true\n    }, opts.yAxis.right)\n  }\n\n  opts.zoom = Object.assign({\n    visible: false\n  }, (opts.zoom || {}))\n\n  // General Options to both chartType\n  opts.tooltip = Object.assign({\n    visible: true,\n    format: false // Use aryakaCharts internal tooltip formatter to show raw data\n  }, (opts.tooltip || {}))\n\n  if (!isFunction(opts.tooltip.format)) {\n    const formatTime = timeFormat('%d %b %Y  %H:%M:%S')\n    opts.tooltip.format = function (d) {\n      if (!d || !isArray(d)) {\n        return ''\n      }\n      const plotSet = this.options.plotSet\n      const timeInfo = this.options.timeInfo\n      const zoneOffset = this.options.xAxis.zoneOffset || ''\n      const yAxis = this.options.yAxis\n\n      let tableStr = `<table><tbody><tr>\n            <td class=\"value_full\" colspan=\"2\">\n            ${formatTime(d[timeInfo.dataIndex])} ${zoneOffset}\n            </td></tr>`\n\n      for (const key in plotSet) {\n        const val = d[plotSet[key].dataIndex]\n        if (!plotSet[key].visible || isNaN(val)) {\n          continue\n        }\n\n        // Find Y Axis format is preset\n        const yOrient = yAxis[plotSet[key].plotAxis[0]]\n        const format = yOrient.format || defaultValueFormat\n\n        tableStr += `<tr>\n        <td class='name'>\n            <span style='background-color:${plotSet[key].color}'></span>${plotSet[key].name}\n        </td>\n        <td class='value'>\n            ${format(val, plotSet[key].unit)}\n        </td>\n        </tr>`\n      }\n\n      tableStr += '</tbody></table>'\n\n      return tableStr\n    }\n  }\n\n  addDefaultChartOptions(opts)\n\n  return opts\n}\n\nexport function addDefaultBSOptions (opts) {\n  // Add defaults to xAxis\n  opts.xAxis = Object.assign({\n    bottom: {\n      unit: constants.UNITS_DEF,\n      visible: true\n    }\n  }, (opts.xAxis || {}))\n\n\n  // If yAxis is not specified, then default is left and its value axis with unit\n  if (!opts.yAxis) {\n    opts.yAxis = {\n      left: {}\n    }\n  }\n\n  if (opts.yAxis.left) {\n    opts.yAxis.left = Object.assign({\n      unit: constants.UNITS_DEF,\n      min: 0, // Start plotting Y Axis from 0\n      visible: true\n    }, opts.yAxis.left)\n  }\n\n  if (opts.yAxis.right) {\n    opts.yAxis.right = Object.assign({\n      unit: constants.UNITS_DEF,\n      min: 0, // Start plotting Y Axis from 0\n      visible: true\n    }, opts.yAxis.right)\n  }\n\n  opts.zoom = Object.assign({\n    visible: false\n  }, (opts.zoom || {}))\n\n\n  // General Options to both chartType\n  opts.tooltip = Object.assign({\n    visible: true,\n    format: false // Use aryakaCharts internal tooltip formatter to show raw data\n  }, (opts.tooltip || {}))\n\n  if (!isFunction(opts.tooltip.format)) {\n    opts.tooltip.format = function (d) {\n      let dataArr = d\n      if (d && d.val) {\n        dataArr = d.val\n      }\n      if (!isArray(dataArr)) {\n        return ''\n      }\n      const plotSet = this.options.plotSet\n      const timeInfo = this.options.timeInfo\n      const yAxis = this.options.yAxis\n\n      let tableStr = `<table><tbody><tr>\n            <td class=\"value_full\" colspan=\"2\">\n            ${dataArr[timeInfo.dataIndex]}\n            </td></tr>`\n\n      for (const key in plotSet) {\n        const val = dataArr[plotSet[key].dataIndex]\n        if (!plotSet[key].visible || isNaN(val)) {\n          continue\n        }\n\n        // Find Y Axis format is preset\n        const yOrient = yAxis[plotSet[key].plotAxis[0]]\n        const format = yOrient.format || defaultValueFormat\n\n        tableStr += `<tr>\n        <td class='name'>\n            <span style='background-color:${plotSet[key].color}'></span>\n        </td>\n        <td class='value'>\n            ${format(val, plotSet[key].unit)}\n        </td>\n        </tr>`\n      }\n\n      tableStr += '</tbody></table>'\n\n      return tableStr\n    }\n  }\n\n  addDefaultChartOptions(opts)\n\n  return opts\n}\n\n\n","import ChartComponent from '@/charts/ChartComponent'\n\nexport default class Series extends ChartComponent {\n  constructor (opts) {\n    super()\n  }\n\n  draw () {\n    this.plotSeries.forEach(function (plotFn) {\n      plotFn.draw()\n    })\n  }\n\n  update () {\n    this.plotSeries.forEach(function (plotFn) {\n      plotFn.update()\n    })\n  }\n\n  showHide (showFlag) {\n    this.plotSeries.forEach(function (plotFn) {\n      plotFn.showHide(showFlag)\n    })\n  }\n\n  // Redraw is called when series is toggled from Legends\n  redraw () {\n    this.plotSeries.forEach(function (plotFn) {\n      plotFn.redraw()\n    })\n  }\n\n  remove () {\n    this.plotSeries.forEach(function (plotFn) {\n      plotFn.remove()\n    })\n    this.plotSeries = null\n    this.opts = null\n  }\n\n}","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","module.exports = require('./forEach');\n","var arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEach;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n","var identity = require('./identity');\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","import ChartAxisParser from '@/data-parser/ChartAxisParser'\nimport {getDateFromEpoc, getObject, refineString, isNumber, isDate, isBoolean} from '@/utils'\nimport each from 'lodash/each'\n\nexport default class BasicTSParser extends ChartAxisParser {\n  constructor (opts) {\n    super(opts)\n    this.opts = opts\n  }\n\n  dataExecutor () {\n    // Order in which the DataProcessor APIs needs to be executed\n    try {\n\n      this.dataOptions = {}\n      this.opts.data && (this.dataOptions.data = this.opts.data)\n      this.opts.series && (this.dataOptions.series = this.opts.series)\n      this.opts.yAxis && (this.dataOptions.yAxis = this.opts.yAxis)\n\n      Object.assign(this.dataOptions, this.constructChartData())\n      Object.assign(this.dataOptions, this.constructXAxisInfo())\n      Object.assign(this.dataOptions, this.constructPlotInfo())\n      Object.assign(this.dataOptions, this.constructYAxisInfo())\n\n      return this.dataOptions\n\n    } catch (err) {\n      console.log('Error encountered while timeseries JSON parsing :', err)\n      this.opts.onError(err)\n      throw new Error('Invalid JSON received - Error on timeseries JSON parsing')\n    }\n  }\n\n  constructChartData () {\n    const dataOptions = this.dataOptions\n    const resJson = dataOptions.data\n    const seriesData = resJson.timeseries\n    const columns = seriesData.columns\n    const data = seriesData.values\n    const validJSONType = (columns.length && data.length)\n\n    // Find seconds in unitArr to find the timeStampIndex\n    const timeStampIndex = 0\n    const firstTime = data[0][timeStampIndex]\n    if (!validJSONType || !(isNumber(firstTime) || isDate(firstTime))) {\n      throw new Error('Invalid Time series JSON received')\n    }\n\n    let start = 0\n    data.forEach(function (d) {\n      if (start > d[timeStampIndex]) {\n        throw new Error('Invalid Time series JSON received: Timestamp Values must be in ascending order')\n      }\n      start = d[timeStampIndex]\n      d[timeStampIndex] = getDateFromEpoc(d[timeStampIndex], true) // convert EPOC to date\n    })\n\n    return {\n      chartData: data\n    }\n  }\n\n  constructXAxisInfo () {\n    const dataOptions = this.dataOptions\n    const seriesData = dataOptions.chartData\n    const dataIndex = 0\n    return {\n      timeInfo: {\n        dataIndex,\n        timeRange: [seriesData[0][dataIndex], seriesData[(seriesData.length - 1)][dataIndex]]\n      }\n    }\n  }\n\n  constructYAxisInfo () {\n    const dataOptions = this.dataOptions\n    const eachPlotSet = dataOptions.plotSet\n    const plotInfo = dataOptions.series\n    const data = dataOptions.chartData\n    const yAxis = getObject(dataOptions, 'yAxis.left')\n    const yAxis2 = getObject(dataOptions, 'yAxis.right')\n    let findEachPlotRange = false\n    let key\n    let yRange = null\n    let yRange2 = null\n\n\n    if (yAxis) {\n      if (Number.isFinite(yAxis.min) && Number.isFinite(yAxis.max)) {\n        yRange = [yAxis.min, yAxis.max]\n      }\n    }\n\n    if (yAxis2) {\n      if (Number.isFinite(yAxis2.min) && Number.isFinite(yAxis2.max)) {\n        yRange2 = [yAxis2.min, yAxis2.max]\n      }\n    }\n\n    // If yRange is not set from graphOptions, then go inside\n    if ((yAxis && !yRange) || (yAxis2 && !yRange2)) {\n\n      for (key in eachPlotSet) {\n        if (!Number.isFinite(eachPlotSet[key].minVal) || !Number.isFinite(eachPlotSet[key].maxVal)) {\n          findEachPlotRange = true\n          break\n        }\n      }\n\n      if ((plotInfo.stack && plotInfo.stack.length) || findEachPlotRange) {\n\n        if (findEachPlotRange) {\n          // Reset range for each plot for finding min , max\n          each(eachPlotSet, function (eachPlot) {\n            eachPlot.minVal = Infinity\n            eachPlot.maxVal = -Infinity\n          })\n        }\n\n        // Reset stack range for each stack for finding min , max\n        plotInfo.stack && plotInfo.stack.forEach(function (plotData) {\n          plotData.valueRange = [Infinity, -Infinity]\n        })\n\n        // Calculate Max and Min for each plots series\n        let valData = 0\n        data.forEach(function (d) {\n          if (findEachPlotRange) {\n            each(eachPlotSet, function (eachPlot) {\n              valData = d[eachPlot.dataIndex]\n              if (valData < eachPlot.minVal) {\n                eachPlot.minVal = valData\n              }\n              if (valData > eachPlot.maxVal) {\n                eachPlot.maxVal = valData\n              }\n            })\n          }\n\n          plotInfo.stack && plotInfo.stack.forEach(function (plotData) {\n            const memberArr = plotData.stackOrderMembers\n            let sum = 0\n            memberArr.forEach(function (member) {\n              sum += (eachPlotSet[member.name].visible ? d[eachPlotSet[member.name].dataIndex] : 0)\n            })\n\n            if (sum < plotData.valueRange[0]) {\n              plotData.valueRange[0] = sum\n            }\n            if (sum > plotData.valueRange[1]) {\n              plotData.valueRange[1] = sum\n            }\n          })\n        })\n      }\n\n      // Find Max value required to plot on graph based on visible plot function . i.e line or stack\n      let allMax = -Infinity\n      let allMax2 = -Infinity\n      for (key in plotInfo) {\n        if (key === 'line') {\n          plotInfo[key].forEach(function (plotData) {\n            if (eachPlotSet[plotData.name].visible && eachPlotSet[plotData.name].plotAxis[0] === 'left' && eachPlotSet[plotData.name].maxVal > allMax) {\n              allMax = eachPlotSet[plotData.name].maxVal\n            }\n            if (eachPlotSet[plotData.name].visible && eachPlotSet[plotData.name].plotAxis[0] === 'right' && eachPlotSet[plotData.name].maxVal > allMax2) {\n              allMax2 = eachPlotSet[plotData.name].maxVal\n            }\n          })\n        } else if (key === 'stack') {\n          plotInfo[key].forEach(function (plotData) {\n            if (plotData.plotAxis[0] === 'left' && plotData.valueRange[1] > allMax) {\n              allMax = plotData.valueRange[1]\n            }\n            if (plotData.plotAxis[0] === 'right' && plotData.valueRange[1] > allMax2) {\n              allMax2 = plotData.valueRange[1]\n            }\n          })\n        }\n      }\n\n      // Find min value just by checking min value among all series data\n      let allMin = Infinity\n      let allMin2 = Infinity\n      for (key in eachPlotSet) {\n        if (eachPlotSet[key].plotAxis[0] === 'left' && eachPlotSet[key].visible && eachPlotSet[key].minVal < allMin) {\n          allMin = eachPlotSet[key].minVal\n        }\n        if (eachPlotSet[key].plotAxis[0] === 'right' && eachPlotSet[key].visible && eachPlotSet[key].minVal < allMin2) {\n          allMin2 = eachPlotSet[key].minVal\n        }\n      }\n\n\n      let yMin, yMax\n      // If Yaxis range is already defined in options, Override it.\n      if ([allMin, allMax].reduce(function (a, b) {\n        return Number.isFinite(a) && Number.isFinite(b)\n      })) {\n        yMin = getObject(dataOptions, 'yAxis.left.min')\n        yMin = Number.isFinite(yMin) ? yMin : allMin\n        yMax = getObject(dataOptions, 'yAxis.left.max')\n        yMax = Number.isFinite(yMax) ? yMax : allMax\n        if (!yMax) {\n          yMax = yMin + 80 // Set as default 100 if range is [0,0]\n        }\n        yRange = [yMin, yMax]\n      } else {\n        if (yAxis) {\n          yRange = [0, 80]\n        } else {\n          yRange = false\n        }\n      }\n\n\n      if ([allMin2, allMax2].reduce(function (a, b) {\n        return Number.isFinite(a) && Number.isFinite(b)\n      })) {\n        yMin = getObject(dataOptions, 'yAxis.right.min')\n        yMin = Number.isFinite(yMin) ? yMin : allMin2\n        yMax = getObject(dataOptions, 'yAxis.right.max')\n        yMax = Number.isFinite(yMax) ? yMax : allMax2\n        if (!yMax) {\n          yMax = yMin + 80 // Set as default 100 if range is [0,0]\n        }\n        yRange2 = [yMin, yMax]\n      } else {\n        if (yAxis2) {\n          yRange2 = [0, 80]\n        } else {\n          yRange2 = false\n        }\n      }\n\n    }\n\n    return {\n      yRange: yRange,\n      yRange2: yRange2\n    }\n  }\n\n  constructPlotInfo () {\n    const dataOptions = this.dataOptions\n    const resJson = dataOptions.data\n    const seriesData = resJson.timeseries\n    const columns = seriesData.columns\n    let ind = 0\n    // Object that contains all plot functions needed for the chart\n    const eachPlotSet = {}\n    // Set of rules that charts needs to be draw on timeSeriesChart\n    const plotInfo = dataOptions.series\n    let key\n\n    const timeStampIndex = dataOptions.timeInfo.dataIndex\n    const dataColorArr = seriesData.color || []\n    const yLeft = getObject(dataOptions, 'yAxis.left')\n    const yRight = getObject(dataOptions, 'yAxis.right')\n\n    // Generate eachPlotSet using columns\n    columns.forEach(function (d) {\n      if (timeStampIndex === ind) {\n        ind++\n        return\n      }\n      // Convert the Series Name to JS suitable object mapped name ex: abc(%) 1 --> abc1\n      const refineName = refineString(d)\n      eachPlotSet[refineName] = {\n        name: d,\n        dataIndex: ind,\n        minVal: Infinity,\n        maxVal: -Infinity,\n        visible: true,\n        color: dataColorArr[ind] || '#000'\n      }\n      ind++\n    })\n\n\n    for (key in plotInfo) {\n      if (key === 'line') {\n        plotInfo[key].forEach(function (plotData) {\n          plotData.name = refineString(plotData.name)\n          const color = plotData.color // Apply color for each Plot series or pick from data color Arr\n          if (!color) {\n            throw `Color not present for series ${plotData.name}`\n          }\n          color && (eachPlotSet[plotData.name].color = color)\n          const plotAxis = plotData.plotAxis || ['left', 'bottom']\n          eachPlotSet[plotData.name].plotAxis = plotAxis\n          const unit = plotAxis[0] === 'left' ? yLeft.unit : yRight.unit\n          eachPlotSet[plotData.name].unit = unit\n          isBoolean(plotData.visible) && (eachPlotSet[plotData.name].visible = plotData.visible)\n        })\n      } else if (key === 'stack') {\n        plotInfo[key].forEach(function (plotData) {\n          const memberArr = plotData.stackOrderMembers\n          plotData.valueRange = [Infinity, -Infinity]\n          memberArr.forEach(function (member) {\n            member.name = refineString(member.name)\n            const color = member.color // Apply color for each Plot series or pick from data color Arr\n            if (!color) {\n              throw `Color not present for series ${plotData.name}`\n            }\n            color && (eachPlotSet[member.name].color = color)\n            const plotAxis = member.plotAxis || ['left', 'bottom']\n            eachPlotSet[member.name].plotAxis = plotAxis\n            const unit = plotAxis[0] === 'left' ? yLeft.unit : yRight.unit\n            eachPlotSet[member.name].unit = unit\n            isBoolean(member.visible) && (eachPlotSet[member.name].visible = member.visible)\n          })\n        })\n      } else if (key === 'bar') {\n        plotInfo[key].forEach(function (plotData) {\n          const memberArr = plotData.barOrderMembers\n          plotData.valueRange = [Infinity, -Infinity]\n          memberArr.forEach(function (member) {\n            member.name = refineString(member.name)\n            const color = member.color // Apply color for each Plot series or pick from data color Arr\n            if (!color) {\n              throw `Color not present for series ${plotData.name}`\n            }\n            color && (eachPlotSet[member.name].color = color)\n            const plotAxis = member.plotAxis || ['left', 'bottom']\n            eachPlotSet[member.name].plotAxis = plotAxis\n            const unit = plotAxis[0] === 'left' ? yLeft.unit : yRight.unit\n            eachPlotSet[member.name].unit = unit\n            isBoolean(member.visible) && (eachPlotSet[member.name].visible = member.visible)\n          })\n        })\n      }\n    }\n\n    return {\n      series: plotInfo, // newly updated series from user options having additional info of each series\n      plotSet: eachPlotSet, // Info of each plot like color, max, min etc\n    }\n  }\n}\n","import ChartComponent from '@/charts/ChartComponent'\nimport {getObject, isFunction} from '@/utils'\nimport {bisector, d3Mouse} from '@/d3Importer'\nimport {each, filter} from 'lodash'\nimport constants from '@/constants'\n\nexport default class TimeSeriesTooltip extends ChartComponent {\n  constructor (opts) {\n    super()\n    this.opts = Object.assign({\n      crossHairs: {\n        enable: true\n      },\n      visible: true\n    }, opts)\n\n    // Provide basic formatter to display hover data\n    if (!isFunction(this.opts.format)) {\n      this.opts.format = function (d) {\n        return `<span> ToolTip Text : </span><br/><span>${JSON.stringify(d)}</span>`\n      }\n    }\n  }\n\n  draw () {\n    this.crossHairs = false\n    this.$toolTipDiv = $('<div></div>').addClass('vc-tooltip-display')\n    this.opts.chart.$container\n      .append(this.$toolTipDiv)\n\n\n    if (this.opts.crossHairs.enable === true) {\n      this.crossHairs = this.opts.chart.svg\n        .append('g')\n        .attr('class', 'vc-tooltip-line')\n      this.crossHairs.append('line')\n        .attr('transform', 'translate(-999,-999)')\n        .attr('x1', this.opts.chart.margin.left)\n        .attr('y1', this.opts.chart.margin.top - constants.TOOLTIP_TOP_BUFFER)\n        .attr('x2', this.opts.chart.margin.left)\n        .attr('y2', (this.opts.chart.chartHeight + this.opts.chart.margin.top))\n\n    }\n\n    this.opts.chart.mouseHandler.register(() => {\n      // Register hover and hide/show toolip events\n      const self = this\n      const xScale = getObject(this.opts, 'chart.xAxis.scale') || false\n      const mouseHandler = this.opts.chart.mouseHandler\n      const dateIndex = this.opts.chart.options.timeInfo.dataIndex\n      const dataSet = this.opts.chart.options.chartData\n      // Find nearest existing date among array of sorted date\n      const bisectDate = bisector(function (d) {\n        return d[dateIndex]\n      }).left\n\n      const mouseEvt = function (d) {\n        // On mousemove of x overlay, find x,y values and update tooltip\n        const xMouse = d3Mouse(this)[0]\n        const yMouse = d3Mouse(this)[1]\n        const xVal = xScale.invert(xMouse) // find xAxis date for mouse position\n\n        // Do binary search of data set from 2nd data set to end\n        const found = bisectDate(dataSet, xVal, 1)\n\n          \n        const dBefore = dataSet[found - 2]\n\n          \n        const dPrev = dataSet[found - 1]\n        // get before find dataSet\n          \n        const dFound = dataSet[found] || dPrev // get find dataSet\n\n        let toolTipData = dPrev\n        if (dataSet.length > self.opts.chart.chartWidth) {\n          // More than one tick reside on each pixel. Hence find tick having max value among the dataset\n          const dataParseLen = Math.floor(dataSet.length / self.opts.chart.chartWidth) + 1\n\n          const visibleDataIndex = {}\n\n          each(self.opts.chart.options.plotSet, function (plot) {\n            if (plot.visible) {\n              visibleDataIndex[plot.dataIndex] = true\n            }\n          })\n\n          const multiArrMap = {}\n          // Do Scan from range -dataParseLen to +dataParseLen between found data index\n          for (let ind = (found - dataParseLen); ind < (found + dataParseLen); ind++) {\n            if (dataSet[ind]) {\n              const dSet = filter(dataSet[ind], function (val, index) {\n                return visibleDataIndex[index]\n              }).sort(function (a, b) {\n                return b - a\n              })\n              if (dSet.length) {\n                multiArrMap[ind] = dSet\n              }\n            }\n          }\n          let maxInd\n          let maxVal = -Infinity\n          each(multiArrMap, function (arrSet, key) {\n            if (maxVal < arrSet[0]) {\n              maxVal = arrSet[0]\n              maxInd = key\n            }\n          })\n\n          toolTipData = dataSet[maxInd] || dFound\n        } else {\n          // Find nearest reaching date among above two dates\n          toolTipData = (xVal - dPrev[dateIndex]) > (dFound[dateIndex] - xVal) ? dFound : dPrev\n        }\n\n        let dateIntRange = dFound[dateIndex] - dPrev[dateIndex]\n\n        if (!dateIntRange && dBefore) {\n          dateIntRange = dPrev[dateIndex] - dBefore[dateIndex]\n        }\n\n        if (dateIntRange < Math.abs(dFound[dateIndex] - xVal)) {\n          // If found is outside data interval range, Then data doesnt exist for that tick.\n          toolTipData = []\n          toolTipData[dateIndex] = xVal\n        }\n\n        self.hover(xMouse, yMouse, toolTipData)\n      }\n\n      let eventName = 'mousemove'\n      if (this.opts.chart.options.chart.isTouchScreen) {\n        eventName = 'click'\n      }\n      mouseHandler.mouseBrush\n        .on(eventName, mouseEvt)\n        .on('mouseout', function () {\n          self.hide()\n        })\n\n      $(mouseHandler.mouseBrush.node()).find('rect.overlay')\n        .on('mousedown', function () {\n          self.hide()\n        })\n\n    })\n  }\n\n  hover (xPos, yPos, displayData) {\n    // Update displayPanel and line based on x position\n    this.crossHairs && this.crossHairs.select('line')\n      .attr('transform', `translate(${xPos},0)`)\n      .attr('x1', this.opts.chart.margin.left)\n      .attr('y1', this.opts.chart.margin.top - constants.TOOLTIP_TOP_BUFFER)\n      .attr('x2', this.opts.chart.margin.left)\n      .attr('y2', (this.opts.chart.chartHeight + this.opts.chart.margin.top))\n    this.crossHairs.classed('vc-hidden', false)\n\n    let percentageDiff = xPos / this.opts.chart.chartWidth\n\n    if (percentageDiff < 0.3) {\n      percentageDiff = 0.2\n    }\n    if (percentageDiff > 0.7) {\n      percentageDiff = 0.95\n    }\n    this.$toolTipDiv\n      .css({\n        left: Math.round(this.opts.chart.$container.position() // left position of chart on screen\n          .left + this.opts.chart.margin.left + xPos - this.$toolTipDiv.width() * percentageDiff) + 'px',\n        top: Math.round(this.opts.chart.$container.position() // top position of chart on screen\n          .top - this.$toolTipDiv.height() - 5 + constants.TOOLTIP_TOP_BUFFER * 2) + 'px',\n        display: 'inline-block'\n      })\n      .html(this.opts.format.call(this.opts.chart, displayData)) // Used format.call(), so that external fun can have access of chart Instance\n  }\n\n  showHide (showFlag) {\n    showFlag = !!showFlag\n\n    if (showFlag) {\n      this.$toolTipDiv && this.$toolTipDiv.show()\n    } else {\n      this.$toolTipDiv && this.$toolTipDiv.hide()\n    }\n\n    this.crossHairs && this.crossHairs.classed('vc-hidden', !showFlag)\n\n    this.opts.visible = showFlag\n  }\n\n  remove () {\n    this.$toolTipDiv && this.$toolTipDiv.remove()\n    this.crossHairs && this.crossHairs.remove()\n    this.opts = null\n  }\n}\n","import ChartComponent from '@/charts/ChartComponent'\n\nexport default class MouseHandler extends ChartComponent {\n  constructor (opts) {\n    super()\n    this.opts = opts\n    this.opts.registerFn = []\n  }\n\n  draw () {\n    this.mouseBrush = this.opts.chart.svg.append('g')\n      .attr('class', 'vc-brushX')\n      .attr('width', this.opts.chart.chartWidth)\n      .attr('height', this.opts.chart.chartHeight)\n      .attr('fill', 'none')\n      .attr('pointer-events', 'all')\n      .attr('style', '-webkit-tap-highlight-color: rgba(0, 0, 0, 0)')\n      .attr('transform', `translate(${this.opts.chart.margin.left},${this.opts.chart.margin.top})`)\n\n    if (this.opts.chart.options.chart.isTouchScreen) {\n      this.mouseBrush.attr('cursor', 'pointer')\n    }\n\n    if (!this.opts.chart.options.zoom.visible) {\n      // x-Zoom for chart doest not exist, Add rect overlay for brushXDiv\n      this.mouseBrush.append('rect')\n        .attr('class', 'overlay')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('width', this.opts.chart.chartWidth)\n        .attr('height', this.opts.chart.chartHeight)\n    }\n  }\n\n  update () {\n    this.mouseBrush.attr('width', this.opts.chart.chartWidth)\n      .attr('height', this.opts.chart.chartHeight)\n      .attr('transform', `translate(${this.opts.chart.margin.left},${this.opts.chart.margin.top})`)\n    if (!this.opts.chart.options.zoom.visible) {\n      this.mouseBrush.select('rect.overlay')\n        .attr('width', this.opts.chart.chartWidth)\n        .attr('height', this.opts.chart.chartHeight)\n    }\n  }\n\n  showHide (showFlag) {\n    showFlag = !!showFlag\n    this.mouseBrush && this.mouseBrush.classed('vc-hidden', !showFlag)\n  }\n\n  register (callback) {\n    this.opts.registerFn.push(callback)\n  }\n\n  triggerMouseAction () {\n    this.opts.registerFn.forEach((fun) => {\n      fun.call(this)\n    })\n  }\n\n  remove () {\n    this.mouseBrush && this.mouseBrush.remove()\n    this.opts = null\n  }\n}","import ChartComponent from '@/charts/ChartComponent'\nimport {getObject, isFunction, emptyFn} from '@/utils'\nimport {brushX, brushY, d3Event} from '@/d3Importer'\nimport constants from '@/constants'\n\nexport default class Zoom extends ChartComponent {\n  constructor (opts) {\n    super()\n    this.opts = Object.assign({\n      onZoom: emptyFn,\n      onY1Zoom: emptyFn,\n      onY2Zoom: emptyFn\n    }, opts)\n  }\n\n  draw () {\n    const self = this\n    const xScale = getObject(this.opts, 'chart.xAxis.scale') || false\n    const yScaleLeft = getObject(this.opts, 'chart.yAxis.scale') || false\n    const yScaleRight = getObject(this.opts, 'chart.yAxis2.scale') || false\n    let $brushOverlay = null\n    if (xScale) {\n      // Create x axis brush for Zoom operation\n      this.brushX = brushX()\n        .extent([\n          [0, 0],\n          [this.opts.chart.chartWidth, this.opts.chart.chartHeight]\n        ])\n\n      // Use the same mouseBrush for both xBrush and tooltip\n      this.brushXDiv = this.opts.chart.mouseHandler.mouseBrush\n        .call(this.brushX)\n\n      $brushOverlay = $(this.brushXDiv.node()).find('rect.overlay')\n\n      // Call this event when xAxis brush is ended\n      this.brushX.on('end', function () {\n        if (!d3Event.selection) {\n          return\n        }\n\n        const d0 = d3Event.selection.map(xScale.invert)\n        // find x1 and x2\n          \n        const d1 = d0 && d0.map(Math.round) // round both values\n\n        // clear Brush\n        self.brushXDiv.call(self.brushX.move, null)\n        $brushOverlay\n          .css({\n            cursor: 'auto'\n          })\n\n        // d1 = d1\n        //   .sort(function (a, b) {\n        //     return (a - b)\n        //   })\n\n        self.opts.chart.xAxis.modifyAxisProps({\n          domainScale: d1 // Change domain of X axis upon horizontal zoom\n        })\n\n        self.opts.chart.series.update() // Update all plotSeries for new YAxis domain change\n\n\n        // Used onZoom.call(), so that external function can have access of chart Instance\n        self.opts && self.opts.onZoom.call(self.opts.chart, d1[0], d1[1])\n\n      })\n    }\n\n    // Create y axis brush for vertical left scale operation\n    if (yScaleLeft) {\n      this.brushYLeft = brushY()\n\n      this.brushYLeftDiv = this.opts.chart.svg.append('g')\n        .attr('class', 'vc-brushY-left')\n\n      // Call this event when yAxis brush is ended\n      this.brushYLeft.on('end', function () {\n        if (!d3Event.selection) {\n          return\n        }\n        self.brushYLeftDiv.call(self.brushYLeft.move, null)\n\n        const d0 = d3Event.selection.map(yScaleLeft.invert)\n\n          \n        const d1 = d0 && d0.map(Math.round)\n          .sort(function (a, b) {\n            return (a - b)\n          })\n\n        self.opts.chart.yAxis.modifyAxisProps({\n          domainScale: d1 // Change domain of Y axis upon vertical zoom\n        })\n\n        self.opts.chart.series.update() // Update all plotSeries for new YAxis domain change\n\n        // Used onZoom.call(), so that external function can have access of chart Instance\n        isFunction(self.opts.onY1Zoom) && self.opts.onY1Zoom.call(self.opts.chart, d1[0], d1[1])\n\n      })\n    }\n\n    // Create y axis brush for vertical right scale operation\n    if (yScaleRight) {\n      this.brushYRight = brushY()\n\n      this.brushYRightDiv = this.opts.chart.svg.append('g')\n        .attr('class', 'vc-brushY-right')\n\n      this.brushYRight.on('end', function () {\n        if (!d3Event.selection) {\n          return\n        }\n        self.brushYRightDiv.call(self.brushYRight.move, null)\n\n        const d0 = d3Event.selection.map(yScaleRight.invert)\n\n          \n        const d1 = d0 && d0.map(Math.round)\n          .sort(function (a, b) {\n            return (a - b)\n          })\n\n        self.opts.chart.yAxis2.modifyAxisProps({\n          domainScale: d1 // Change domain of Y2 axis upon vertical zoom\n        })\n\n        self.opts.chart.series.update() // Update all plotSeries for new YAxis domain change\n\n        // Used onZoom.call(), so that external function can have access of chart Instance\n        isFunction(self.opts.onY2Zoom) && self.opts.onY2Zoom.call(self.opts.chart, d1[0], d1[1])\n\n      })\n    }\n\n    $brushOverlay && this.opts.chart.mouseHandler.register(function () {\n      // When mouse is clicked or down, enable zoom brush and its mouse cursor\n      $brushOverlay\n        .on('mousedown', function () {\n          $(this)\n            .css({\n              cursor: 'col-resize'\n            })\n        })\n        .on('click', function () {\n          $(this)\n            .css({\n              cursor: 'auto'\n            })\n        })\n    })\n    this.update()\n\n  }\n\n  update () {\n    if (this.brushX) {\n      this.brushX.extent([\n        [0, 0],\n        [this.opts.chart.chartWidth, this.opts.chart.chartHeight]\n      ])\n\n      this.brushXDiv.call(this.brushX)\n    }\n\n    if (this.brushYLeft) {\n      this.brushYLeft\n        .extent([\n          [0, 0],\n          [(this.opts.chart.margin.left - constants.BRUSHY_BUFFER), this.opts.chart.chartHeight]\n        ])\n\n      this.brushYLeftDiv\n        .attr('transform', 'translate(' + constants.BRUSHY_BUFFER + ',' + this.opts.chart.margin.top + ')')\n        .call(this.brushYLeft)\n    }\n\n    if (this.brushYRight) {\n      this.brushYRight\n        .extent([\n          [(this.opts.chart.margin.left + this.opts.chart.chartWidth - constants.BRUSHY_BUFFER), 0],\n          [(this.opts.chart.margin.left + this.opts.chart.chartWidth + this.opts.chart.margin.right - constants.BRUSHY_BUFFER), this.opts.chart.chartHeight]\n        ])\n\n      this.brushYRightDiv\n        .attr('transform', 'translate(' + (constants.BRUSHY_BUFFER) + ',' + this.opts.chart.margin.top + ')')\n        .call(this.brushYRight)\n    }\n  }\n\n  showHide (showFlag) {\n    showFlag = !!showFlag\n    this.brushXDiv && this.brushXDiv.classed('vc-hidden', !showFlag)\n    this.brushYLeftDiv && this.brushYLeftDiv.classed('vc-hidden', !showFlag)\n    this.brushYRightDiv && this.brushYRightDiv.classed('vc-hidden', !showFlag)\n    this.opts.visible = showFlag\n  }\n\n  remove () {\n    if (this.brushXDiv) {\n      this.brushXDiv.call(this.brushX.move, null)\n      this.brushXDiv && this.brushXDiv.remove()\n    }\n    if (this.brushYLeftDiv) {\n      this.brushYLeftDiv.call(this.brushYLeft.move, null)\n      this.brushYLeftDiv.remove()\n    }\n    if (this.brushYRightDiv) {\n      this.brushYRightDiv.call(this.brushYRight.move, null)\n      this.brushYRightDiv.remove()\n    }\n    this.opts = null\n  }\n}","import ChartComponent from '@/charts/ChartComponent'\nimport constants from '@/constants'\nimport {emptyFn, isFunction, throttle} from '@/utils'\nimport {select} from '@/d3Importer'\n\nexport default class TimeSeriesLegend extends ChartComponent {\n  constructor (opts) {\n    super()\n    this.opts = Object.assign({\n      disableSeriesToggle: false\n    }, opts)\n\n    const self = this\n    this.opts.maxWidthLegend = 0\n    this.opts.spacingNames = []\n\n\n    const graphOptions = this.opts.chart.options\n    const eachPlotSet = graphOptions.plotSet\n    const eachPlotNames = Object.keys(eachPlotSet)\n    let leng = 0\n    const textWidth = []\n    let maxLenLegend\n\n    const dummyG = this.opts.chart.svg.append('g')\n    // Add all name on DOM to calculate how much space is needed for every names\n    dummyG.selectAll('.dummyText')\n      .data(eachPlotNames)\n      .enter()\n      .append('text')\n      .attr('class', 'vc-legend-label')\n      .style('font-size', '11px')\n      .style('font-weight', '500')\n      .text(function (d) {\n        return (self.opts.legendPrefix + (eachPlotSet[d] ? eachPlotSet[d].name : ''))\n      })\n      .each(function (d, i) {\n        // Find size required for each legend on screen\n        const thisWidth = Math.round(this.getComputedTextLength())\n        if (thisWidth > self.opts.maxWidthLegend) {\n          self.opts.maxWidthLegend = thisWidth\n          maxLenLegend = d\n        }\n        textWidth.push(thisWidth)\n        $(this).remove() // remove them just after displaying them\n      })\n\n    // Fill the spacing Arr having position for each legends on horizontal order\n    textWidth.forEach(function (ele) {\n      leng += ele\n      self.opts.spacingNames.push(leng)\n    })\n\n    // Make maxTextLength Higher to show full text for pie legends\n    this.opts.maxTextLength = maxLenLegend.length + 100\n\n    dummyG.remove()\n  }\n\n  draw () {\n\n    const self = this\n    const graphOptions = this.opts.chart.options\n    let toggleSeries = emptyFn\n    const eachPlotSet = graphOptions.plotSet\n    const eachPlotNames = Object.keys(eachPlotSet)\n    const maxYLen = Math.floor(this.opts.chart.chartFullSpace.height * 90 / 100)\n    let fullYLen = eachPlotNames.length * constants.LEGEND_Y_SPACE\n    fullYLen = fullYLen > maxYLen ? maxYLen : fullYLen\n    const divWidth = this.opts.maxWidthLegend + constants.LEGEND_SHOW_WIDTH\n\n    this.opts.legendDiv = {\n      width: divWidth,\n      height: fullYLen\n    }\n\n\n    // Perfom Series show and hide on click of each legend\n    if (!this.opts.disableSeriesToggle) {\n\n      toggleSeries = function (seriesName) {\n        let visibleSeries = 0\n        let plotName\n\n        if (eachPlotSet[seriesName] && eachPlotSet[seriesName].visible) {\n          // If the series is getting disabled and its only one series visible, Dont disable it.\n          for (plotName in eachPlotSet) {\n            eachPlotSet[plotName].visible && visibleSeries++\n          }\n\n          if (visibleSeries <= 1) {\n            return\n          }\n        }\n\n        let applyYAxis\n\n        // plotSeries that is getting toggled\n        let currentPlotInfo\n\n        if (eachPlotSet && eachPlotSet[seriesName]) {\n          currentPlotInfo = eachPlotSet\n        }\n\n\n        if (currentPlotInfo) {\n\n          currentPlotInfo[seriesName].visible = !currentPlotInfo[seriesName].visible\n\n          if (currentPlotInfo[seriesName].plotAxis[0] === constants.DIR_LEFT) {\n\n            // This will compute max and min value for YAxis based on series which are visible\n            Object.assign(self.opts.chart.options, self.opts.chart.dataParser.constructYAxisInfo())\n\n            applyYAxis = constants.DIR_LEFT\n            // Update Y Axis with new domainScale\n            self.opts.chart.yAxis.modifyAxisProps({\n              domainScale: graphOptions.yRange\n            })\n\n          } else if (currentPlotInfo[seriesName].plotAxis[0] === constants.DIR_RIGHT) {\n\n            // This will compute max and min value for YAxis based on series which are visible\n            Object.assign(self.opts.chart.options, self.opts.chart.dataParser.constructYAxisInfo())\n\n            applyYAxis = constants.DIR_RIGHT\n            // Update Y Axis with new domainScale\n            self.opts.chart.yAxis2.modifyAxisProps({\n              domainScale: graphOptions.yRange2\n            })\n          }\n\n          // Adjust YAxis tick value display based on yAxis change\n          self.opts.chart.reScaleYAxis(applyYAxis)\n\n          // Redraw all plot components based on yAxis change\n          self.opts.chart.series.redraw()\n\n          const sFlag = currentPlotInfo[seriesName].visible\n\n          select(this)\n            .classed('vc-fill-hidden', !sFlag)\n\n          isFunction(self.opts.onLegendChange) && self.opts.onLegendChange.call(self.opts.chart, currentPlotInfo[seriesName], sFlag)\n        }\n\n      }\n    }\n\n    this.legendDisplay = this.opts.chart.svg.append('g')\n      .attr('class', 'vc-legend-group')\n      .attr('transform', 'translate(15, 5)')\n\n    this.legendBlock = this.legendDisplay\n      .selectAll('g')\n      .data(eachPlotNames)\n      .enter()\n      .append('g')\n      .attr('transform', function (d, i) {\n        // Provide horizontal position based on order\n        if (self.opts.position === constants.DIR_TOP) {\n          const x = self.opts.spacingNames[i - 1] ? (self.opts.spacingNames[i - 1] + constants.LEGEND_SPACE * i) : 0\n          return 'translate(' + x + ', 0)'\n        } else if (self.opts.position === constants.DIR_RIGHT) {\n          // Provide vertical position based on order\n          const y = i * constants.LEGEND_Y_SPACE\n          return 'translate(0 ,' + y + ')'\n        }\n      })\n      .attr('class', function (d) {\n        return 'vc-legend vc-legend-' + d\n      })\n      .classed('vc-fill-hidden', function (d, i) {\n        return (eachPlotSet[d] ? !eachPlotSet[d].visible : false)\n      })\n\n    // Listen to click event only for timeseries legends\n    this.legendBlock\n      .on('click', throttle(toggleSeries, 300, { // Sometimes toggle event is called multiple times, hence block by adding throttle\n        trailing: false\n      }))\n\n\n    this.legendBlock.append('text')\n      .attr('class', 'vc-legend-label')\n      .attr('x', constants.LEGEND_TEXT_X)\n      .attr('y', constants.LEGEND_TEXT_Y)\n      .style('font-size', '11px')\n      .style('font-weight', '500')\n      .text(function (d) {\n        let legName = (self.opts.legendPrefix + (eachPlotSet[d] ? eachPlotSet[d].name : ''))\n        if (self.opts.isPieLegend && self.opts.maxTextLength < legName.length) {\n          legName = legName.substring(0, self.opts.maxTextLength) + '...'\n        }\n        return legName\n      })\n\n\n    this.legendBlock.append('rect')\n      .attr('class', 'vc-legend-box')\n      .attr('x', 0)\n      .attr('width', constants.LEGEND_RECT_SIZE)\n      .attr('height', constants.LEGEND_RECT_SIZE)\n      .style('stroke', function (d) {\n        return eachPlotSet[d] ? eachPlotSet[d].color : ''\n      })\n      .style('stroke-width', '2px')\n      .style('fill', function (d) {\n        return eachPlotSet[d] ? eachPlotSet[d].color : ''\n      })\n\n    this.opts.horizontalLegendWidth = Math.round(this.legendDisplay.node()\n      .getBBox()\n      .width)\n\n    this.update()\n\n  }\n\n  update () {\n    // Display in vertical order\n    const self = this\n    const $legendText = this.opts.chart.$container.find('svg .vc-legend-label')\n    let basicWidth = this.opts.maxWidthLegend + this.opts.chart.margin.left + this.opts.chart.margin.right\n\n    if (this.opts.position === constants.DIR_RIGHT) {\n      // Display legends vertically on right side\n      basicWidth += constants.LEGEND_SHOW_WIDTH\n      let legendPos = constants.VERT_POS_LEGEND\n      if (this.opts.maxWidthLegend === constants.LEGEND_MAX_WIDTH) {\n        legendPos = constants.VERT_POS_LEGEND + 10\n      }\n      let legendXPos = Math.floor(this.opts.chart.chartWidth * legendPos / 100)\n      let xBuff = this.opts.chart.chartWidth - legendXPos\n      xBuff = Math.floor((xBuff - this.opts.legendDiv.width) / 2)\n      legendXPos += xBuff\n\n      const legendYPos = Math.floor((this.opts.chart.chartFullSpace.height - this.opts.legendDiv.height) / 2)\n\n      this.legendDisplay\n        .attr('transform', 'translate(' + legendXPos + ',' + legendYPos + ')')\n\n    }\n\n    const d3Svg = this.opts.chart.svg\n\n    if (this.opts.position === constants.DIR_TOP) {\n      basicWidth = constants.LEGEND_SPACE * self.opts.spacingNames.length + constants.DATA_INTERVAL_BUFFER_X\n\n      if ((this.opts.horizontalLegendWidth + constants.LEGEND_RIGHT_BUFFER) > self.opts.chart.chartWidth) {\n        // Hide only text and display Color box with tooltip\n        d3Svg.selectAll('.vc-legend')\n          .each(function () {\n            const seriesName = select(this).select('text').html()\n            select(this).select('rect')\n              .html('')\n              .append('svg:title')\n              .text(seriesName)\n          })\n        $legendText.hide()\n\n        if (self.opts.chart.chartWidth < basicWidth) {\n          // display box vertically\n          this.legendBlock\n            .attr('transform', function (d, i) {\n              const y = i * constants.LEGEND_Y_SPACE\n              return 'translate(0,' + y + ')'\n            })\n        } else {\n          // Display only box on top\n          this.legendBlock\n            .attr('transform', function (d, i) {\n              const x = constants.LEGEND_SPACE * i\n              return 'translate(' + x + ', 0)'\n            })\n        }\n      } else {\n        // Display legend on top with both text, box and remove tooltip\n        this.legendBlock\n          .attr('transform', function (d, i) {\n            const x = self.opts.spacingNames[i - 1] ? (self.opts.spacingNames[i - 1] + constants.LEGEND_SPACE * i) : 0\n            return 'translate(' + x + ', 0)'\n          })\n\n        if (!this.opts.isPieLegend) {\n          d3Svg.selectAll('.vc-legend')\n            .each(function () {\n              select(this).select('rect')\n                .html('')\n            })\n          $legendText.show()\n        }\n      }\n    }\n\n  }\n\n  showHide (showFlag) {\n    showFlag = !!showFlag\n    this.opts.visible = showFlag\n    this.legendDisplay && this.legendDisplay.classed('vc-hidden', !showFlag)\n  }\n\n  remove () {\n    this.legendBlock && this.legendBlock.remove()\n    this.legendDisplay && this.legendDisplay.remove()\n    this.opts = null\n  }\n}","import ChartComponent from '@/charts/ChartComponent'\nimport constants from '@/constants'\nimport {getObject} from '@/utils'\nimport {line} from '@/d3Importer'\n\nexport default class Line extends ChartComponent {\n\n  constructor (opts) {\n    super()\n    // Do not register this component in chartComponentsArr,  As the series component is already registered and will call the line APIs\n    this.opts = Object.assign({\n      className: '',\n      plotAxis: [constants.DIR_LEFT, constants.DIR_BOTTOM],\n      lineData: null,\n      yAxisTarget: null,\n      xAxisTarget: null,\n      visible: true\n    }, opts)\n\n    const self = this\n\n    // Find x and y axis based on plotAxis\n    let x = getObject(this.opts, 'chart.xAxis.scale')\n    if (this.opts.plotAxis.indexOf(constants.DIR_TOP) > -1) {\n      x = getObject(this.opts, 'chart.xAxis2.scale')\n    }\n\n    let y = getObject(this.opts, 'chart.yAxis.scale')\n    if (this.opts.plotAxis.indexOf(constants.DIR_RIGHT) > -1) {\n      y = getObject(this.opts, 'chart.yAxis2.scale')\n    }\n\n    this.line = line()\n\n    if (this.opts.yAxisTarget) {\n      // For normal series, yAxisTarget refers to the index of this series in data Arr\n      this.line\n        .defined(function (d) {\n          return d[self.opts.yAxisTarget] != null\n        })\n        .x(function (d) {\n          // xAxisTarget refers the index of date in data Arr\n          return x(d[self.opts.xAxisTarget])\n        })\n        .y(function (d) {\n          return y(d[self.opts.yAxisTarget])\n        })\n    }\n  }\n\n  draw () {\n    const self = this\n    this.lineTag = this.opts.chart.graphZone.selectAll('.vc-line-' + this.opts.className)\n      .data([this.opts.lineData])\n      .enter()\n      .append('g')\n      .attr('class', 'vc-line-plot vc-line-' + this.opts.className)\n\n    const clipElement = this.opts.chart.$container.find('svg clipPath')\n    // Adding the lines series for data to be shown\n    this.lineTag.append('path')\n      .attr('clip-path', 'url(#' + clipElement.attr('id') + ')') // display graphZone of same size as clip-path defined\n      .attr('class', 'vc-line')\n      .style('stroke', function (d) {\n        return d.color\n      })\n      .style('fill', 'transparent')\n      .style('stroke-width', function (d) {\n        return d.lineWidth || '2px'\n      })\n      .attr('d', function (d) {\n        return self.line(d.values) // Values are array of array having format like  [[date, series1, series2 ....],...]\n      })\n  }\n\n  // Update happens when the chart is resized\n  update () {\n    const self = this\n    this.lineTag && this.lineTag.select('path').attr('d', function (d) {\n      return self.line(d.values)\n    })\n  }\n\n  showHide (showFlag) {\n    showFlag = !!showFlag\n    this.lineTag && this.lineTag.classed('vc-hidden', !showFlag)\n    this.opts.visible = showFlag\n  }\n\n  // Redraw is called when series is toggled from Legends\n  redraw () {\n    const eachPlotSet = this.opts.chart.options.plotSet\n    const seriesName = this.opts.lineData.name\n    // Remove line series\n    this.lineTag && this.lineTag.remove()\n\n    if (eachPlotSet && eachPlotSet[seriesName] && eachPlotSet[seriesName].visible) {\n      this.draw()\n    }\n\n  }\n  \n  remove () {\n    this.lineTag && this.lineTag.remove()\n    this.line = null\n    this.opts = null\n  }\n\n}","import ChartComponent from '@/charts/ChartComponent'\nimport constants from '@/constants'\nimport {area, stack, stackOrderNone, stackOffsetNone} from '@/d3Importer'\nimport {getObject} from '@/utils'\n\nexport default class StackArea extends ChartComponent {\n  constructor (opts) {\n    super()\n    this.opts = Object.assign({\n      className: '',\n      plotAxis: [constants.DIR_LEFT, constants.DIR_BOTTOM],\n      xAxisTarget: '',\n      stackData: null,\n      stackOrderMembers: {},\n      visible: true\n    }, opts)\n\n    const self = this\n    const eachPlotSet = this.opts.chart.options.plotSet\n    // Define in what order, Stack series needs to be ploted\n    this.opts.stackOrderIndex = this.opts.stackOrderMembers.filter(function (ele) {\n      return eachPlotSet[ele.name].visible || false\n    })\n      .map(function (ele) {\n        return eachPlotSet[ele.name].dataIndex\n      })\n\n\n    // Find x and y axis based on plotAxis\n    let x = getObject(this.opts, 'chart.xAxis.scale')\n    if (this.opts.plotAxis.indexOf(constants.DIR_TOP) > -1) {\n      x = getObject(this.opts, 'chart.xAxis2.scale')\n    }\n\n    let y = getObject(this.opts, 'chart.yAxis.scale')\n    if (this.opts.plotAxis.indexOf(constants.DIR_RIGHT) > -1) {\n      y = getObject(this.opts, 'chart.yAxis2.scale')\n    }\n\n    this.opts.d3Stack = stack()\n\n    this.area = area()\n      .x(function (d, i) {\n        return x(d.data[self.opts.xAxisTarget])\n      })\n      .y0(function (d) {\n        return y(d[0]) // Indicates where to start along YAxis\n      })\n      .y1(function (d) {\n        return y(d[1]) // Indicates where to end along YAxis\n      })\n\n  }\n\n  draw () {\n    const self = this\n    const eachPlotSet = this.opts.chart.options.plotSet\n\n    this.opts.d3Stack.keys(this.opts.stackOrderIndex) // specify the stack series names in array format\n    this.opts.d3Stack.order(stackOrderNone) // use the given series order.\n    this.opts.d3Stack.offset(stackOffsetNone) // apply a zero baseline on start\n\n    // Show stack plot for only series which are visible\n    const stackVisibleOrder = this.opts.stackOrderMembers.filter(function (ele) {\n      return (eachPlotSet[ele.name].visible || false)\n    })\n\n    this.stackLayer = this.opts.chart.graphZone.selectAll('.vc-stack-' + this.opts.className)\n      .data(this.opts.d3Stack(this.opts.stackData))\n      .enter()\n      .append('g')\n      .attr('class', 'vc-stack-plot vc-stack-' + this.opts.className)\n\n    const clipElement = this.opts.chart.$container.find('svg clipPath')\n\n    // PLot stackLayer based on each series visiblity\n    this.stackLayer.append('path')\n      .attr('clip-path', 'url(#' + clipElement.attr('id') + ')') // display graphZone of same size as clip-path defined\n      .attr('class', function (d) {\n        const stackMember = stackVisibleOrder[self.opts.stackOrderIndex.indexOf(d.key)] || {\n          name: ''\n        }\n        return 'vc-stack vc-stack-' + stackMember.name\n      })\n      .style('fill', function (d) {\n        const stackMember = stackVisibleOrder[self.opts.stackOrderIndex.indexOf(d.key)] || {\n          name: ''\n        }\n        return eachPlotSet[stackMember.name].color\n      })\n      .attr('d', this.area)\n\n  }\n  \n  // Update stackLayer based on chart resize\n  update () {\n    this.stackLayer && this.stackLayer.select('path').attr('d', this.area)\n  }\n  \n  redraw () {\n    const eachPlotSet = this.opts.chart.options.plotSet\n    // Modify stackOrder arr based on visibleSeries\n    this.opts.stackOrderIndex = this.opts.stackOrderMembers.filter(function (ele) {\n      return (eachPlotSet[ele.name].visible || false)\n    })\n      .map(function (ele) {\n        return eachPlotSet[ele.name].dataIndex\n      })\n\n    // Remove all stack series\n    this.stackLayer && this.stackLayer.remove()\n    // draw with new stackOrderMembers\n    this.draw()\n  }\n  \n  showHide (showFlag) {\n    showFlag = !!showFlag\n    this.stackLayer.classed('vc-hidden', !showFlag)\n    this.opts.visible = showFlag\n  }\n  \n  remove () {\n    //  this.stackAreaPath.remove();\n    this.stackLayer && this.stackLayer.remove()\n    this.opts.d3Stack = null\n    this.area = null\n    this.opts = null\n  }\n}","import {isArray} from '@/utils'\nimport Line from '@/series/Line'\nimport StackArea from '@/series/StackArea'\nimport Series from '@/series/Series'\n\nexport default class TimeSeries extends Series {\n  constructor (opts) {\n    super()\n    this.opts = opts\n    this.plotSeries = []\n    const data = this.opts.chart.options.chartData // Accept either timeseries or pieseries\n    const plotInfo = this.opts.chart.options.series\n    const eachPlotSet = this.opts.chart.options.plotSet\n\n    // Create plot components based on input options and each plot info\n    isArray(plotInfo.stack) && plotInfo.stack.forEach((plotData) => {\n      this.plotSeries.push(new StackArea({\n        chart: this.opts.chart,\n        className: plotData.className || plotData.name,\n        plotAxis: plotData.plotAxis,\n        xAxisTarget: this.opts.chart.options.timeInfo.dataIndex,\n        stackData: data,\n        stackOrderMembers: plotData.stackOrderMembers\n      }))\n    })\n\n    isArray(plotInfo.line) && plotInfo.line.forEach((plotData) => {\n      this.plotSeries.push(new Line({\n        chart: this.opts.chart,\n        className: plotData.className || plotData.name,\n        plotAxis: plotData.plotAxis,\n        yAxisTarget: eachPlotSet[plotData.name].dataIndex,\n        xAxisTarget: this.opts.chart.options.timeInfo.dataIndex,\n        visible: eachPlotSet[plotData.name].visible,\n        lineData: {\n          name: plotData.name,\n          color: eachPlotSet[plotData.name].color,\n          lineWidth: eachPlotSet[plotData.name].lineWidth,\n          values: data\n        }\n      }))\n    })\n  }\n\n}","import {getObject, isObject} from '@/utils'\nimport Chart from '@/charts/Chart'\nimport Axis from '@/axis'\nimport {addDefaultTSOptions} from '@/helpers'\nimport constants from '@/constants'\nimport ChartAxisParser from '@/data-parser/ChartAxisParser'\nimport BasicTSParser from '@/data-parser/BasicTSParser'\nimport Tooltip from '@/tooltip/TimeSeriesTooltip'\nimport MouseHandler from '@/mouse-handler'\nimport Zoom from '@/zoom'\nimport TimeSeriesLegend from '@/legend/TimeSeriesLegend'\nimport TimeSeries from '@/series/TimeSeries'\n\nexport default class TimeSeriesChart extends Chart {\n  constructor (container, opts) {\n    opts.startTime = new Date()\n\n    // Create the dataParser is not passed\n    if (!opts.dataParser) {\n      opts.dataParser = new BasicTSParser(opts)\n    }\n    // Check the dataParser exists and its instanceof ChartAxisParser\n    if (!(opts.dataParser instanceof ChartAxisParser)) {\n      throw new Error(\"DataParser in options dosen't have implementation of ChartAxisParser\")\n    }\n\n    // Call Parent Impl\n    super(container, opts)\n\n    // Run the dataParser for given JSON data\n    if (isObject(this.dataParser)) {\n      Object.assign(this.options, this.dataParser.dataExecutor())\n    }\n\n    // Add default options to chart\n    addDefaultTSOptions(this.options)\n\n    // Initilize all chart components needed for timeSeriesChart on exact order based on each dependencies\n    this.chartInitilize()\n\n    setImmediate(() => this.draw())\n  }\n\n  chartInitilize () {\n    let axisOptions\n    const yRange = this.options.yRange\n    const yRange2 = this.options.yRange2\n    const timeInfo = this.options.timeInfo\n\n    if (yRange) {\n      axisOptions = getObject(this, 'options.yAxis.left')\n      this.yAxis = new Axis({\n        chart: this,\n        position: 'y',\n        orient: 'left',\n        rangeScale: [this.chartHeight, 0],\n        domainScale: yRange,\n        ...axisOptions\n      })\n      this.chartComponentsArr.push(this.yAxis)\n    }\n\n    if (yRange2) {\n      axisOptions = getObject(this, 'options.yAxis.right')\n      this.yAxis2 = new Axis({\n        chart: this,\n        position: 'y',\n        orient: 'right',\n        rangeScale: [this.chartHeight, 0],\n        domainScale: yRange2,\n        ...axisOptions\n      })\n      // Register the component for draw, update, showHide and remove (chart API)\n      this.chartComponentsArr.push(this.yAxis2)\n    }\n\n    if (timeInfo.timeRange) {\n      axisOptions = getObject(this, 'options.xAxis.bottom')\n      this.xAxis = new Axis({\n        chart: this,\n        position: 'x',\n        orient: 'bottom',\n        rangeScale: [0, this.chartWidth],\n        domainScale: timeInfo.timeRange,\n        ...axisOptions\n      })\n      this.chartComponentsArr.push(this.xAxis)\n    }\n\n    const tooltipOpts = getObject(this, 'options.tooltip')\n    if (tooltipOpts.visible) {\n      this.tooltip = new Tooltip({\n        chart: this,\n        ...tooltipOpts\n      })\n      this.chartComponentsArr.push(this.tooltip)\n    }\n\n    const zoomOpts = getObject(this, 'options.zoom', {})\n    if ((tooltipOpts.visible || zoomOpts.visible)) {\n      this.mouseHandler = new MouseHandler({\n        chart: this,\n      })\n      this.chartComponentsArr.push(this.mouseHandler)\n    }\n\n    if (this.options.zoom.visible) {\n      this.zoomBrush = new Zoom({\n        chart: this,\n        onZoom: this.options.zoom.onXZoom,\n        onY1Zoom: this.options.zoom.onY1Zoom,\n        onY2Zoom: this.options.zoom.onY2Zoom\n      })\n      this.chartComponentsArr.push(this.zoomBrush)\n    }\n\n    if (this.options.series) {\n      this.series = new TimeSeries({\n        chart: this\n      })\n      // Register the component for draw, update, showHide and remove\n      this.chartComponentsArr.push(this.series)\n    }\n\n    if (this.options.legend.visible) {\n      this.legends = new TimeSeriesLegend({\n        chart: this,\n        legendPrefix: this.options.legend.legendPrefix,\n        position: constants.DIR_TOP,\n        disableSeriesToggle: this.options.legend.disableSeriesToggle,\n        onLegendChange: this.options.legend.onLegendChange\n      })\n      this.chartComponentsArr.push(this.legends)\n    }\n  }\n\n  draw () {\n    console.log('TimeSeriesChart draw', this)\n    super.draw()\n    this.options.afterDraw.call(this)\n\n    // Add Extra Buffer for max Y value and provide space to display all ticks in graphZone\n    this.reScaleYAxis()\n\n    this.chartResponsive()\n\n    this.mouseHandler && this.mouseHandler.triggerMouseAction()\n\n    this.timeDiff = (new Date()\n      .getTime() - this.options.startTime.getTime())\n    this.options.onComplete.call(this, this.timeDiff)\n  }\n\n  // Find next possible tick to display max Y value and adjust margin to show all tick labels completely\n  reScaleYAxis (axisSpecifier) {\n\n    let tickValArr\n    let diffVal\n    let rangeVal\n    let yMax\n    let applyY1Axis = true\n    let applyY2Axis = true\n\n    if (axisSpecifier === constants.DIR_LEFT) {\n      applyY2Axis = false\n    }\n\n    if (axisSpecifier === constants.DIR_RIGHT) {\n      applyY1Axis = false\n    }\n\n    // If Max value is provided in options, Dont compute next possible tick.\n    yMax = getObject(this.options, 'yAxis.left.max')\n    if (this.options.yRange && applyY1Axis && !Number.isFinite(yMax)) {\n      tickValArr = this.yAxis.tickValues\n      // If tickValArr contains values\n      if (tickValArr.length > 1) {\n        // Find difference of last and last previous tick values of Y Axis\n        diffVal = tickValArr[0] - tickValArr[1]\n        // New range is increased by above difference\n        rangeVal = tickValArr[0] + diffVal\n\n        // Modify new max range for the graph\n        this.options.yRange[1] = rangeVal\n\n        // Update Y Axis with new domainScale\n        this.yAxis.modifyAxisProps({\n          domainScale: this.options.yRange\n        })\n      }\n    }\n\n    yMax = getObject(this.options, 'yAxis.right.max')\n    if (this.options.yRange2 && applyY2Axis && !Number.isFinite(yMax)) {\n      tickValArr = this.yAxis2.tickValues\n\n      if (tickValArr.length > 1) {\n        diffVal = tickValArr[0] - tickValArr[1]\n        rangeVal = tickValArr[0] + diffVal\n\n        this.options.yRange2[1] = rangeVal\n\n        // Update Y Axis with new domainScale\n        this.yAxis2.modifyAxisProps({\n          domainScale: this.options.yRange2\n        })\n      }\n    }\n\n    // Adjusts Y axis width based on max text length displayed\n    const reScaleAxis = {}\n    let requiredWidth = 0\n\n    if (this.options.yRange) {\n      reScaleAxis[constants.DIR_LEFT] = {}\n      reScaleAxis[constants.DIR_LEFT].class = '.vc-axis-left'\n      reScaleAxis[constants.DIR_LEFT].maxText = ''\n    }\n\n    if (this.options.yRange2) {\n      reScaleAxis[constants.DIR_RIGHT] = {}\n      reScaleAxis[constants.DIR_RIGHT].class = '.vc-axis-right'\n      reScaleAxis[constants.DIR_RIGHT].maxText = ''\n    }\n\n    // Creates dummy svg to add Max length tick values and check its required width in chart\n    const dummyG = this.svg.append('g')\n      .attr('class', 'vc-axis')\n\n    for (const axis in reScaleAxis) {\n      const ticksArr = this.$container.find('svg ' + reScaleAxis[axis].class).find('text')\n      ticksArr.each(function (i) {\n        const tickHtml = $(ticksArr[i])\n          .text() || ''\n        if (tickHtml.length > reScaleAxis[axis].maxText.length) {\n          reScaleAxis[axis].maxText = tickHtml\n        }\n      })\n\n\n      dummyG.selectAll('.dummyText')\n        .data([reScaleAxis[axis].maxText])\n        .enter()\n        .append('text')\n        .text(String)\n        .each(function (d, i) {\n          // Compute requiredWidth for the Max text\n          requiredWidth = this.getComputedTextLength()\n          $(this).remove() // remove it just after displaying\n        })\n\n      // Update respective margin to fit in ticks text\n      this.margin[axis] = Math.round(requiredWidth) + constants.Y_AXIS_SPACE\n\n    }\n    dummyG.remove()\n\n    this.chartWidth = (this.chartFullSpace.width - this.margin.left - this.margin.right)\n    this.update()\n  }\n\n}\n"],"sourceRoot":""}